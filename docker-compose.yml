version: "3.9"

services:
  # Postgres for all services
  postgres:
    image: postgres:16
    container_name: postgres_cloud
    environment:
      POSTGRES_USER: master
      POSTGRES_PASSWORD: masterpwd
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d   # âœ… auto-init
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U master"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Eureka server
  service-registry:
    build: ./service-registry
    container_name: service-registry
    environment:
      - SERVER_PORT=8761
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
    ports:
      - "8761:8761"

  # API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    depends_on:
      - service-registry
    environment:
      - SERVER_PORT=8080
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ALLOWED_ORIGINS=http://localhost:3000
    ports:
      - "8080:8080"

  # User Service
  user-service:
    build: ./user-service
    container_name: user-service
    depends_on:
      - postgres
      - service-registry
    environment:
      - SERVER_PORT=8081
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/users_db
      - SPRING_DATASOURCE_USERNAME=users_owner
      - SPRING_DATASOURCE_PASSWORD=${USERS_DB_PASSWORD}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "8081:8081"

  # Match Service
  match-service:
    build: ./match-service
    container_name: match-service
    depends_on:
      - postgres
      - service-registry
    environment:
      - SERVER_PORT=8082
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/matches_db
      - SPRING_DATASOURCE_USERNAME=matches_owner
      - SPRING_DATASOURCE_PASSWORD=${MATCHES_DB_PASSWORD}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "8082:8082"

  # Ticket Service
  ticket-service:
    build: ./ticket-service
    container_name: ticket-service
    depends_on:
      - postgres
      - service-registry
    environment:
      - SERVER_PORT=8083
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/tickets_db
      - SPRING_DATASOURCE_USERNAME=tickets_owner
      - SPRING_DATASOURCE_PASSWORD=${TICKETS_DB_PASSWORD}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "8083:8083"

  # Notification Service
  notification-service:
    build: ./notification-service
    container_name: notification-service
    depends_on:
      - postgres
      - service-registry
    environment:
      - SERVER_PORT=8084
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/notifications_db
      - SPRING_DATASOURCE_USERNAME=notifs_owner
      - SPRING_DATASOURCE_PASSWORD=${NOTIFS_DB_PASSWORD}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "8084:8084"
  frontend:
    build:
      context: ./front-end
      dockerfile: Dockerfile
    ports:
      - "3000:80"   # host:container
    depends_on:
      - api-gateway


volumes:
  postgres_data:
