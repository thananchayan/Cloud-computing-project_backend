#server.port=8082
#spring.application.name=match-service
#
## Eureka
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
## Force Eureka to use IP instead of hostname
#eureka.instance.prefer-ip-address=true
#eureka.instance.hostname=localhost
#
## Optional: Explicitly override instance-id
#eureka.instance.instance-id=${spring.application.name}:${server.port}
#
#
## PostgreSQL
#spring.datasource.url=jdbc:postgresql://localhost:5432/matchdb
#spring.datasource.username=postgres
#spring.datasource.password=root
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#
## JWT Secret Key
#jwt.secret=MyJwtSecretKey12345eiriifudcdom@Iifeiodsoodeieoirioer
#jwt.expiration=86400000
#
## expose actuator endpoints
#management.endpoints.web.exposure.include=health,info,metrics,prometheus
#
## show full health details (nice for demo)
#management.endpoint.health.show-details=always
#
## optional: add service name in metrics tags
#management.metrics.tags.application=${spring.application.name}


server.port=8082
spring.application.name=match-service

# Eureka (docker service name)
eureka.client.service-url.defaultZone=http://service-registry:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=match-service
eureka.instance.instance-id=${spring.application.name}:${server.port}

# PostgreSQL (db created via init script)
spring.datasource.url=jdbc:postgresql://postgres:5432/matches_db
spring.datasource.username=matches_owner
spring.datasource.password=matches_pwd

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# JWT
jwt.secret=MyJwtSecretKey12345eiriifudcdom@Iifeiodsoodeieoirioer
jwt.expiration=86400000

# Actuator + Prometheus
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.metrics.tags.application=${spring.application.name}

