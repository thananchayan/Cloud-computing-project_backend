## Basic settings
#server.port=8080
#spring.application.name=api-gateway
#
## Eureka configuration
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
#eureka.instance.prefer-ip-address=true
#
## Gateway Routes
## Route to USER-SERVICE
#spring.cloud.gateway.routes[0].id=user-service
#spring.cloud.gateway.routes[0].uri=lb://user-service
#spring.cloud.gateway.routes[0].predicates[0]=Path=/users/**
#
## Route to MATCH-SERVICE
#spring.cloud.gateway.routes[1].id=match-service
#spring.cloud.gateway.routes[1].uri=lb://match-service
#spring.cloud.gateway.routes[1].predicates[0]=Path=/matches/**
#
## Route to TICKET-SERVICE
#spring.cloud.gateway.routes[2].id=ticket-service
#spring.cloud.gateway.routes[2].uri=lb://ticket-service
#spring.cloud.gateway.routes[2].predicates[0]=Path=/tickets/**
#
#spring.cloud.gateway.routes[3].id=notification-service
#spring.cloud.gateway.routes[3].uri=lb://notification-service
#spring.cloud.gateway.routes[3].predicates[0]=Path=/notifications/**
#
#
## Optional: Enable detailed gateway logs for debugging
#logging.level.org.springframework.cloud.gateway=DEBUG


# Basic settings
# Server SSL configuration
server.port=8443
spring.application.name=api-gateway

# ======================================================
# Server SSL configuration (self-signed certificate)
# ======================================================
server.ssl.enabled=true

# Path to the keystore inside the container
server.ssl.key-store=/app/certs/gateway.p12
server.ssl.key-store-password=changeit
server.ssl.key-store-type=PKCS12


spring.data.redis.host=redis
spring.data.redis.port=6379


# CORS configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000}

# Optional: alias (if you set one when generating cert with keytool)
server.ssl.key-alias=gateway

# Eureka (docker service name)
eureka.client.service-url.defaultZone=http://service-registry:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=api-gateway
eureka.instance.instance-id=${spring.application.name}:${random.uuid}

# Gateway Routes
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/users/**

spring.cloud.gateway.routes[1].id=match-service
spring.cloud.gateway.routes[1].uri=lb://MATCH-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/matches/**
spring.cloud.gateway.routes[1].filters[0].name=RequestRateLimiter
spring.cloud.gateway.routes[1].filters[0].args.key-resolver=#{@ipKeyResolver}
spring.cloud.gateway.routes[1].filters[0].args.redis-rate-limiter.replenishRate=2
spring.cloud.gateway.routes[1].filters[0].args.redis-rate-limiter.burstCapacity=2

spring.cloud.gateway.routes[2].id=ticket-service
spring.cloud.gateway.routes[2].uri=lb://TICKET-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/tickets/**
spring.cloud.gateway.routes[2].filters[0].name=RequestRateLimiter
spring.cloud.gateway.routes[2].filters[0].args.key-resolver=#{@userKeyResolver}
spring.cloud.gateway.routes[2].filters[0].args.redis-rate-limiter.replenishRate=2
spring.cloud.gateway.routes[2].filters[0].args.redis-rate-limiter.burstCapacity=2

spring.cloud.gateway.routes[3].id=notification-service
spring.cloud.gateway.routes[3].uri=lb://NOTIFICATION-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/notifications/**

# Debug logs for Gateway
logging.level.org.springframework.cloud.gateway=DEBUG



